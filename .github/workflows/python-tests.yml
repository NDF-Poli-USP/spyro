# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python tests

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  # Cancel running jobs if new commits are pushed
  group: >
    ${{ github.workflow }}-
    ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: self-hosted

    container:
      image: firedrakeproject/firedrake:2025.4.1
      options: --user root  # Ensures it can install packages if needed

    steps:

    - name: Pre-run cleanup
        # Make sure the current directory is empty
      run: find . -delete

    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update \
        && apt-get -y install git python3 \
        && apt-get -y install gmsh patchelf \
        && pip3 install segyio \
        && apt-get update && apt-get install -y libgmp3-dev libmpfr-dev libcgal-dev python3-tk \
        && pip3 install --no-dependencies git+https://github.com/NDF-Poli-USP/SeismicMesh.git \
        && pip3 install pyamg \
        && pip3 install meshio \
        && pip3 install -U memory_profiler \
        && pip3 install pytest pytest-cov \
        && pip3 install pytest-sugar

    - name: Clear all firedrake-related caches
      run: |
        rm -rf ~/.cache/loopy \
               ~/.loopy_kernel_cache \
               ~/.cache/pyop2 \
               ~/.cache/tsfc \
               .pytest_cache
        find . -name '*.pkl' -delete || true

    - name: Running parallel tests for forward problem only
      run: |
          ./cleanup.sh
          mpiexec -n 6 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.forward.xml --cov-context=test tests/parallel/test_forward.py
          mpiexec -n 6 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.3d.xml --cov-context=test tests/three_dimension/test_hexahedral_convergence.py
          mpiexec -n 6 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.supershot.xml --cov-context=test tests/parallel/test_forward_supershot.py
          mpiexec -n 2 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.io.xml --cov-context=test tests/parallel/test_parallel_io.py
          mpiexec -n 2 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.serial_shots.xml --cov-context=test tests/parallel/test_forward_multiple_serial_shots.py
    - name: Running serial fast tests
      run: |
        ./cleanup.sh
        python3 -m pytest -n 8 --cov=spyro --cov-report=term --cov-report=xml:coverage.fast.xml tests/on_one_core/ --skip-slow
    - name: Running serial slow tests
      run: |
        ./cleanup.sh
        python3 -m pytest -n 8 --cov=spyro --cov-report=term --cov-report=xml:coverage.slow.xml tests/on_one_core/  --only-slow

    
    - name: Running parallel tests for inversion
      run: |
          ./cleanup.sh
          mpiexec -n 6 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.fwi.xml --cov-context=test tests/parallel/test_fwi.py
          mpiexec -n 3 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.supershot_grad.xml --cov-context=test tests/parallel/test_supershot_grad.py
          mpiexec -n 2 python3 -m pytest --cov=spyro --cov-report=term --cov-report=xml:coverage.gradient_serial.xml --cov-context=test tests/parallel/test_gradient_serialshots.py

    - name: Combine all coverage reports
      run: |
        pip3 install coverage
        coverage combine
        coverage xml

    - name: Uploading coverage to Codecov
      run: |
        export CODECOV_TOKEN="6cd21147-54f7-4b77-94ad-4b138053401d" && curl -s https://codecov.io/bash | bash
    - name: Post-run cleanup
      if: always()
      run: find . -delete
